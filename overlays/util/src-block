#!/usr/bin/env perl

$STYLE = $ENV{SB_STYLE};
$PRE_BREAK = not $ENV{SB_NO_PRE_BREAK};
$ALWAYS_END = $ENV{SB_ALWAYS_END};

$START   = $ENV{SB_START};
$CMD_END = $ENV{SB_CMD_END};
$END     = $ENV{SB_END};
$STR_RES = $ENV{SB_STR_RES};
$PRE_RES = $ENV{SB_PRE_RES};
$PRE     = $ENV{SB_PRE};
$PRE_END = $ENV{SB_PRE_END};
$END_RES = $ENV{SB_END_RES};
$STRIP   = $ENV{SB_STRIP};

if ($STYLE =~ m/^org$/i) {
  # Org mode output as comments
  $START   //= "^[\t ]*#\\+BEGIN_SRC[\t ]+";
  $END     //= "^[\t ]*#\\+END_SRC\$";
  $STR_RES //= "\n\n*#\\+RESULTS:\n";
  $PRE_RES //= ": ";
} elsif ($STYLE =~ m/^sh$/i) {
  # Shell input
  $START   //= "#:%f\\[";
  $END     //= "\\]:";
  $STR_RES //= "\n";
  $PRE_RES //= "#: ";
  $END_RES //= "#:#";
  $STRIP //= "^#[\t ]*";
} elsif ($STYLE =~ m/^md$/i) {
  # Markdown input as comments
  $START   //= "<!--%f\\[";
  $END     //= "]-->";
  $STR_RES //= "\n";
  $PRE_RES //= "    ";
  $PRE     //= "```";
  $PRE_END //= $PRE;
  $END_RES //= "<!--END\\[]-->";
} else {
  # Markdown output as comments (default)
  $START   //= "<!--\\[";
  $CMD_END //= "]-->\n```";
  $END     //= "```";
  $STR_RES //= "\n<!--:\n";
  $PRE_RES //= ": ";
  $END_RES //= ":-->";
  $ALWAYS_END //= true;
}

$START =~ s/%f/(?<flags>[a-z]*)/;
$PRE =~ s/^|$/\n/g if $PRE_BREAK;
$PRE_END =~ s/^|$/\n/g if $PRE_BREAK;
$STR_RES_ = $STR_RES =~ s/(?<!\\)[\\*?+]//rg;
$END_RES_ = $END_RES =~ s/(?<!\\)[\\*?+]//rg;

$DEL = shift if $ARGV[0] eq "-d";

sub r { my %g = @_;
  return $g{all} if ($DEL or $g{flags} =~ m/x/);
  local $body = $g{body};
  local $cmd = $g{cmd};
  $body =~ s/$STRIP//gsm if $STRIP;
  $cmd =~ s/$STRIP//gsm if $STRIP;
  local $_ = `printf %s '$body' | $g{cmd}`;
  if ($g{flags} !~ m/[pr]/) { s/^/$PRE_RES/gsm; $_ = $STR_RES_ . $_; }
  if ($g{flags} =~ m/[p]/ ) { $_ = $PRE . $_ . $PRE_END; }
  if ($g{flags} =~ m/[r]/ ) { $_ = "\n" . $_; }
  if ($ALWAYS_END or $g{flags} =~ m/[pr]/) { $_ .= $END_RES_; }
  return $g{all} . $_;
}

undef $/;
$_ = <>;
$PREFIX_MATCH = "(?:$STR_RES(?:$PRE_RES.*?\n)+)?";
$END_MATCH = "(?:(?:(?!$START).)*?$END_RES)?";
s/(?<all>$START[\t ]*(?<cmd>.+?)$CMD_END(?:\n(?<body>.*?))?$END)$PREFIX_MATCH$END_MATCH/r(%+)/mges;
print;
